{"version":3,"sources":["components/artist/artist.js","components/track/track.js","components/searchbar/searchbar.js","components/header/header.js","components/entry/entry.js","components/reminder/reminder.js","components/redux-thunk/agemeter.js","redux/actions/action.js","redux/reducers/reminder_reducer.js","redux/constant.js","redux/reducers/age_reducer.js","redux/reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["Artist","_ref","artists","images","name","followers","genres","react_default","a","createElement","className","src","url","alt","join","total","Tracks","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playAudio","preview_url","audio","Audio","state","playing","pause","playing_previous_preview_url","setState","play","_this2","tracks","map","track","id","album","key","onClick","Component","Searchbar","searchQuery","e","target","value","runQuerryFun","runQuerry","type","placeholder","onChange","changeQuerry","onKeyPress","onHitEnter","Api_base_Add","Header","fetch","concat","then","resp","json","data","console","log","items","length","innerdata","catch","err","searchbar_searchbar","bind","artist_artist","components_track_track","Entry","history","push","goToMusic","React","Reminder","reminderText","addReminder","handleChange","addreminder","reminder","rem","deleteReminder","clearReminder","connect","reminderReducer","dispatch","text","AgeMeter","age","AgeUp","AgeDown","AgeReducer","val","setTimeout","payload","AgeUpAsync","action","Math","random","reminderArray","arguments","undefined","toConsumableArray","filter","objectSpread","assign","todos","reminders","todo","index","completed","intialState","newState","rootReducer","combineReducers","App","store","createStore","applyMiddleware","thunk","es","react_router_dom","basename","react_router","path","exact","render","to","component","agemeter","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0dea308e.chunk.js","sourcesContent":["import React from 'react';\nimport './artist.css';\n\nconst Artist = ({ artists }) => {\n    if(!artists) return null;\n\n    const { images, name, followers, genres } = artists;\n    return(\n        <div className=\"artist-container\">\n            <div className=\"artist-profile-container\">\n                <img className=\"artist-profile\" src={images[0] && images[0].url} alt=\"artist-profile\" />\n                <p>{name}</p>\n                <p>{genres.join(',')}</p>\n                <p>{followers.total}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Artist;","import React, { Component } from 'react';\nimport './track.css';\n\nclass Tracks extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playing: false,\n            audio: null,\n            playing_previous_preview_url: null\n        }\n    }\n\n    playAudio = preview_url => {\n        const audio = new Audio(preview_url);\n\n        if (!this.state.playing) {\n            audio.play();\n            this.setState({ playing: true, audio: audio, playing_previous_preview_url: preview_url })\n        } else {\n            this.state.audio.pause();\n            if (this.state.playing_previous_preview_url == preview_url) {\n                this.setState({ playing: false });\n            } else {\n                audio.play();\n                this.setState({ audio: audio, playing_previous_preview_url: preview_url })\n            }\n        }\n    }\n\n    render() {\n\n        const { tracks } = this.props;\n        return (\n            <div className=\"track-contanier\">\n                {\n                    tracks.map(track => {\n                        const { id, album, name, preview_url } = track;\n\n                        return (\n                            <div key={id} className=\"track-info\" onClick={() => this.playAudio(preview_url)}>\n                                <img className=\"track-image\" src={album.images[0] && album.images[0].url} alt=\"track-profile\" />\n                                <p>{name}</p>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Tracks;","import React, { Component } from 'react';\nimport './searchbar.css';\n\nclass Searchbar extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            searchQuery: '',\n        }\n    }\n\n    changeQuerry(e) {\n        this.setState({ searchQuery: e.target.value });\n    }\n\n    onHitEnter(e) {\n        if (e.key === 'Enter') {\n            this.runQuerryFun();\n        }\n    }\n\n    runQuerryFun(){\n        this.props.runQuerry(this.state.searchQuery);\n    }\n\n    render() {\n        return (\n            <div className=\"Header-container\">\n                <input type=\"text\"\n                    className=\"search-input\"\n                    placeholder=\"Enter artist name\"\n                    value={this.state.searchQuery}\n                    onChange={(e) => this.changeQuerry(e)}\n                    onKeyPress={(e) => this.onHitEnter(e)}\n                />\n                <button className=\"submit-btn\"\n                    onClick={() => this.runQuerryFun()}>\n                    Search\n            </button>\n            </div>\n        )\n    }\n}\n\nexport default Searchbar;","import React, { Component } from 'react';\nimport './header.css';\nimport Artist from '../artist/artist';\nimport Tracks from '../track/track';\nimport Searchbar from '../searchbar/searchbar';\n\nconst Api_base_Add = 'https://spotify-api-wrapper.appspot.com/'\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            artists: null,\n            tracks: []\n        }\n    }\n\n    runQuerry(searchQuery) {\n        fetch(`${Api_base_Add}/artist/${searchQuery}`)\n            .then((resp) => resp.json())\n            .then(data => {\n                console.log('artist',data);\n                if (data.artists.items.length > 0) {\n                    const artists = data.artists.items[0]\n                    this.setState({ artists });\n\n                    fetch(`${Api_base_Add}/artist/${artists.id}/top-tracks`)\n                        .then((resp) => resp.json())\n                        .then(innerdata => {\n                            this.setState({ tracks: innerdata.tracks });\n                        })\n                        .catch(err => console.log(err))\n                    }\n                }\n            )\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        return (\n            <div className=\"main-container\">\n                <Searchbar runQuerry={this.runQuerry.bind(this)} />\n                <Artist artists={this.state.artists} />\n                <Tracks tracks={this.state.tracks} />\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport './entry.css';\n// import { withRouter } from 'react-router-dom';\n\nclass Entry extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    goToReminder(){\n        this.props.history.push('/entry/reminder');\n    }\n\n    goToMusic(){\n        this.props.history.push('/entry/music');\n    }\n\n    goToAgeMeter(){\n        this.props.history.push('/entry/agemeter');\n    }\n\n    render(){\n        return(\n            <div className=\"Entry-container\">\n                {/* <button onClick={() => this.goToReminder()} className=\"btn primary countdown\">\n                    Reminder\n                </button> */}\n                <button onClick={() => this.goToMusic()} className=\"btn primary music\">\n                    Music\n                </button>\n                {/* <button onClick={() => this.goToAgeMeter()} className=\"btn primary music\">\n                    AgeMeter\n                </button> */}\n            </div>\n        )\n    }\n}\n\nexport default Entry;","import React from 'react';\nimport { connect } from 'react-redux';\nimport './reminder.css';\nimport { bindActionCreators } from 'redux';\n\nclass Reminder extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reminderText: '',\n        }\n    }\n\n    handleChange(e) {\n        this.setState({ reminderText: e.target.value });\n    }\n\n    addreminder() {\n        this.props.addReminder(this.state.reminderText);\n        this.setState({ reminderText:'' });\n    }\n\n    render() {\n        return (\n            <div className=\"reminder-container\">\n                <h4>Your Reminder</h4>\n                <input className=\"reminder-input\"\n                    type=\"text\"\n                    value={this.state.reminderText}\n                    onChange={(e) => this.handleChange(e)}\n                />\n                <button className=\"btn success add-reminder-btn\"\n                    type=\"submit\"\n                    onClick={() => this.addreminder()}\n                >\n                    Add reminder\n                </button>\n                {this.props.reminder.length > 0 ?\n                    this.props.reminder.map(rem => {\n                        return (\n                            <div key={rem.id} >\n                                <span>{rem.reminderText}</span>\n                                <button className=\"btn danger delete-btn\" onClick={() => this.props.deleteReminder(rem.id)} >Delete</button>\n                            </div>\n                        )\n                    })\n                    : ''}\n                \n                <div >\n                    <button className=\"btn danger remove-all-btn\" onClick={() => this.props.clearReminder()} >Clear Reminder</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log('store data', state);\n    return {\n        reminder: state.reminderReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addReminder: (text) => dispatch({ type: 'SET_REMINDER', reminderText: text }),\n        deleteReminder: (id) => dispatch({ type:'DELETE_ONE_REMINDER', id: id }),    \n        clearReminder: () => dispatch ({ type:'CLEAR_REMINDER' }),\n        // actions: bindActionCreators([action1, action2, action3], dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reminder);","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../redux/actions/action';\n\nclass AgeMeter extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"agemeter-conatiner\">\n                <div>{this.props.age}</div  >\n                <button className=\"btn success\" onClick={this.props.AgeUp} >Age Up</button>\n                <button className=\"btn primary\" onClick={this.props.AgeDown}>Age Down</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToprops = state => {\n    return {\n        age: state.AgeReducer.age\n    }\n}       \n\nconst mapDispatchToprops = dispatch => {\n    return {\n        AgeUp: () => dispatch(Actions.AgeUp(1)),\n        AgeDown: () => dispatch(Actions.AgeDown(1)),\n    }\n}\n\n\nexport default connect(mapStateToprops, mapDispatchToprops)(AgeMeter);","export function AgeUpAsync(val) {\n    return ({ type: 'AGE_UP', payload: val })\n}\n\nexport function AgeUp(val) {\n    // return async (dispatch,getState) => {\n    //     dispatch({type: \"LOADING\"})\n    //     await fetch()\n    //     fetch()\n    //     .then(()=>dispatch({type: \"SUCESS\"}))\n    //     .catch(()=>dispatch({type: \"FAILURE\"}))\n    // }\n    return dispatch =>\n        setTimeout(() => {\n            dispatch(AgeUpAsync(val))\n        }, 3000);\n}\n\nexport function AgeDown(val) {\n    return { type: 'AGE_DOWN', payload: val }   \n}","import { SET_REMINDER, DELETE_ONE_REMINDER, CLEAR_REMINDER, UPDATE_ONE_REMINDER } from \"../constant\";\n\nconst addReminder = (action) => {\n    return {\n        reminderText: action.reminderText,\n        id: Math.random()\n    }\n}\n\nconst deleteReminder = (reminderArray, id) => {\n    let finalReminder = reminderArray.filter((rem => rem.id !== id))\n    return finalReminder;\n}\n\n\nconst reminderReducer = (state = [], action) => {\n    let reminders = [];\n\n    switch (action.type) {\n        case SET_REMINDER:\n            reminders = [...state, addReminder(action)]\n            return reminders;\n        // return {\n        //     ...state,\n        //     remainder: addReminder(action)\n        // }\n\n        case DELETE_ONE_REMINDER:\n            reminders = deleteReminder(state, action.id)\n            return reminders;\n\n        case CLEAR_REMINDER:\n            reminders = []\n            return { ...state }\n\n        case UPDATE_ONE_REMINDER:\n            // return {\n            //     Reminders: state.reminders.map((item, i) => {\n            //         if (i === action.payload.index) {\n            //             return Object.assign({}, item, action.payload.updatedReminder)\n            //         }\n            //     })\n            // }\n            return Object.assign({}, state, {\n                todos: state.reminders.map((todo, index) => {\n                    if (index === action.payload.index) {\n                        return Object.assign({}, todo, {\n                            completed: !todo.completed\n                        })\n                    }\n                    return todo\n                })\n            })\n\n        default:\n            return state;\n    }\n}\n\nexport default reminderReducer;","export const SET_REMINDER = 'SET_REMINDER';\nexport const DELETE_ONE_REMINDER = 'DELETE_ONE_REMINDER';\nexport const CLEAR_REMINDER = 'CLEAR_REMINDER';\nexport const AGE_UP = 'AGE_UP';\nexport const AGE_DOWN = 'AGE_DOWN';\nexport const UPDATE_ONE_REMINDER = 'UPDATE_ONE_REMINDER';","import { AGE_DOWN, AGE_UP } from \"../constant\";\n\nconst intialState = {\n    age: 10\n}\n\nconst AgeReducer = (state = intialState, action) => {\n    const newState = { ...state };\n\n    switch (action.type) {\n\n        case AGE_DOWN:\n                newState.age -= action.payload;\n                return newState;\n\n        case AGE_UP:\n                newState.age += action.payload;\n                return newState;\n\n        default:\n            return state;\n    }\n}\n\nexport default AgeReducer;","import { combineReducers } from \"redux\";\nimport reminderReducer from \"../reducers/reminder_reducer\";\nimport AgeReducer from \"../reducers/age_reducer\";\n\nconst rootReducer = combineReducers({\n    AgeReducer,\n    reminderReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport './App.css';\nimport Header from './components/header/header';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport Entry from './components/entry/entry';\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Reminder from './components/reminder/reminder';\nimport thunk from 'redux-thunk';\nimport agemeter from './components/redux-thunk/agemeter';\nimport rootReducer from './redux/reducers';\n\nfunction App() {\n\n  const store = createStore(rootReducer, applyMiddleware(thunk));\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router basename=\"/\">\n          <Route path=\"/\" exact render={() => (<Redirect to='/entry' />)} />\n          <Route path='/entry' component={Entry} />\n          <Route path='/entry/reminder' component={Reminder} />\n          <Route path='/entry/music' component={Header} />\n          <Route path='/entry/agemeter' component={agemeter} />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}